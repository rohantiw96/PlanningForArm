function evaluate()
start_values = [
    %[0.180000 2.880000 0.540000 3.040000 2.640000],
    [0.560000 1.960000 0.760000 3.220000 4.360000],
    [1.340000 2.630000 1.340000 4.090000 4.840000],
    [1.440000 5.600000 2.530000 6.270000 5.990000],
    [1.440000 0.100000 2.750000 1.870000 0.500000],
    [0.340000 2.120000 2.100000 4.030000 0.590000],
    [1.660000 5.990000 6.140000 2.870000 0.270000],
    [1.600000 0.220000 2.570000 0.820000 1.860000],
    [1.610000 1.360000 5.650000 2.830000 5.260000],
    [0.980000 2.410000 3.780000 1.470000 2.070000],
    [1.170000 1.910000 5.970000 2.460000 3.440000],
    [0.600000 1.870000 4.140000 0.120000 1.860000],
    [1.570000 1.660000 0.190000 1.800000 4.690000],
    [0.470000 1.610000 1.020000 0.660000 3.400000],
    [0.430000 2.210000 3.000000 1.720000 5.650000],
    [0.380000 1.560000 2.120000 4.540000 1.710000],
    [1.220000 0.760000 0.360000 3.340000 4.440000],
    [1.310000 1.290000 1.130000 5.650000 5.500000],
    [0.720000 1.740000 1.720000 5.020000 1.510000],
    [0.690000 1.320000 2.720000 2.550000 3.260000],
    [1.020000 2.460000 1.070000 5.950000 0.710000],
    [1.810000 2.050000 1.140000 0.210000 3.680000],
    [0.740000 1.380000 2.550000 5.740000 2.260000],
    [1.020000 2.030000 5.750000 1.990000 2.930000],
    [0.820000 0.200000 3.170000 5.860000 0.760000]];

goal_values = [
    %[1.780000 0.510000 0.720000 6.030000 3.440000],
    [1.040000 2.960000 2.280000 5.440000 2.200000],
    [1.370000 1.560000 2.350000 0.130000 2.930000],
    [0.170000 2.480000 6.200000 2.300000 5.650000],
    [1.650000 0.930000 6.260000 4.650000 1.120000],
    [1.630000 1.660000 5.630000 3.920000 5.670000],
    [1.450000 5.930000 3.290000 1.260000 4.700000],
    [0.120000 0.770000 3.550000 2.370000 6.000000],
    [1.020000 2.460000 1.070000 5.950000 0.710000],
    [1.810000 2.050000 1.140000 0.210000 3.680000],
    [0.740000 1.380000 2.550000 5.740000 2.260000],
    [1.020000 2.030000 5.750000 1.990000 2.930000],
    [0.820000 0.200000 3.170000 5.860000 0.760000],
    [1.720000 0.200000 2.690000 5.170000 2.380000],
    [0.260000 0.660000 2.090000 3.560000 4.460000],
    [0.160000 2.270000 1.190000 2.640000 4.290000],
    [1.780000 1.390000 1.620000 6.180000 4.640000],
    [1.520000 1.840000 5.930000 3.140000 1.740000],
    [0.630000 2.020000 3.230000 1.620000 5.050000],
    [0.270000 0.210000 2.690000 5.970000 1.080000]];
num_of_samples =5;% size(start_values,1);
% start_values = (2*pi()).*rand(20,dofs);
% goal_values = (2*pi()).*rand(20,dofs);
cost_ = zeros(4,num_of_samples);
time_ = zeros(4,num_of_samples);
vertices_ = zeros(4,num_of_samples);
under_5s = zeros(4,num_of_samples);
success = -1*ones(4,num_of_samples);

for i=1:num_of_samples
    for k = 1:3
        [planlength,cost,time,vertices,s5] = runtest("map2.txt",start_values(i,:),goal_values(i,:),k-1);
        cost_(k,i) = cost;
        time_(k,i) = time;
        vertices_(k,i) = vertices;
        under_5s(k,i) = s5;
        success(k,i) = planlength~=0;
    end
    i
end
printf("cost\n");
mean(cost_,2);
printf("\ntime\n")
mean(time_,2);
printf("\nvertices\n")
mean(vertices_,2);
printf("\n under 5 seconds\n")
mean(under_5s,2);
